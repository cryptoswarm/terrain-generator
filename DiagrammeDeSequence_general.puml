@startuml
participant Controller as C
[-> C: createWorld()
activate C
    create participant "ag: UserArgs" as AG
    C -> AG: new UserArgs()
    activate AG
        C <-- AG: ag
    deactivate AG

    == Initialization ==

    participant worldGenerator as WG
    C -> WG: newWorld()
    activate WG
        C <-- WG
    deactivate WG
    C -> WG: setMode()
    activate WG
        C <-- WG
    deactivate WG
    C -> WG: setSoil()
    activate WG
        C <-- WG
    deactivate WG
    C -> WG: setNbsWaterSource()
    activate WG
        C <-- WG
    deactivate WG
    C -> WG: setShape()
    activate WG
        C <-- WG
    deactivate WG
    create participant "r: MeshFileReader" as R
    C -> R: new MeshFileReader()
    activate R
        R -> C: setWorldWidth(w)
        activate C
            C -> WG: setWidth(w)
            activate WG
                C <-- WG
            deactivate WG
            C --> R
        deactivate C
        R -> C: setWorldHeight(h)
        activate C
            C -> WG: setHeight(h)
            activate WG
                C <-- WG
            deactivate WG
            C --> R
        deactivate C
        loop for all polygone
        R -> C: addWorldTile(x,y)
            activate C
                C -> WG: addTile(x,y)
                activate WG
                    C <-- WG
                deactivate WG
                C --> R
            deactivate C
        end
        loop for all polygone
            loop for all neighbor
                R -> C: addWorldNeighbor(x,y,nx,ny)
                activate C
                    C -> WG: addNeighbor(x,y,nx,ny)
                    activate WG
                        C <-- WG
                    deactivate WG
                    C --> R
                deactivate C
             end
        end
        C <-- R
    deactivate R

    == Create world feature ==

    C -> WG : generateWorld(world)
    activate WG
        C <-- WG : world
    deactivate WG

    == Write End mesh ==

    participant "Writer" as W
    C -> W
    activate W
        loop for all polygone
            W -> C: getWorldTileColor(x,y)
            activate C
                C -> WG: getTileColor(x,y)
                activate WG
                    C <-- WG
                deactivate WG
                W <-- C
            deactivate C
        end
        C <-- W
    deactivate W
[<--C


@enduml